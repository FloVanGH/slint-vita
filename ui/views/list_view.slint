// SPDX-FileCopyrightText: 2023 Florian Blasius <co_sl@tutanota.com>
// SPDX-License-Identifier: MIT

import { Container, PageScrollView, StateArea } from "../widgets/widgets.slint";
import { Theme } from "../styling/theme.slint";

export struct ListItem {
    title: string,
    selected: bool
}

export component ListViewItem {
    callback clicked <=> i-state-area.clicked;

    in property <string> text <=> i-text.text;
    in property <bool> selected <=> i-state-area.has-focus;

    min-height: 64px;

    Rectangle {
        x: 0;
        y: 0;
        width: 100%;
        height: 40%;
        background: Theme.palette.items-gradient;
    }

    Rectangle {
        x: 0;
        y: 0;
        width: 100%;
        height: 1px;
        background: Theme.palette.border-brush;
    }

    HorizontalLayout {
        height: 100%;
        padding-left: Theme.spacings.large;
        padding-right: Theme.spacings.large;
        spacing: Theme.spacings.medium;

        i-text := Text {
            color: Theme.palette.foreground-brush;
            horizontal-alignment: left;
            vertical-alignment: center;
        }
    }

    i-state-area := StateArea {}
}

export global ListAdapter {
    callback item-clicked(int /* index */);

    in property <[[ListItem]]> list-items;
}

export component ListView {
    callback close <=> i-container.close;

    width: 100%;
    height: 100%;

    i-container := Container {
        background: green;

        i-page-scroll-view := PageScrollView {
            width: 100%;
            height: 100%;

            HorizontalLayout {
                for list in ListAdapter.list-items :   Flickable {
                    width: i-page-scroll-view.width;
                    height: i-page-scroll-view.height;

                    VerticalLayout {
                        padding-top: 32px;
                        alignment: start;

                        for item[index] in list : ListViewItem {
                            text: item.title;
                            selected: item.selected;
                        }
                    }
                }
            }
        }
    }
}